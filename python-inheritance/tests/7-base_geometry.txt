
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> geo = BaseGeometry()
>>> geo.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 9, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented

>>> geo.area(2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: area() takes 1 positional argument but 2 were given

>>> geo.integer_validator("width", 12)

>>> geo.integer_validator("width", "width")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: width must be an integer

>>> geo.integer_validator("width", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 15, in integer_validator
    raise ValueError(f"{name} must be greater than 0")
ValueError: width must be greater than 0

>>> geo.integer_validator("width", -1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 15, in integer_validator
    raise ValueError(f"{name} must be greater than 0")
ValueError: width must be greater than 0

>>> geo.integer_validator(1, -1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 15, in integer_validator
    raise ValueError(f"{name} must be greater than 0")
ValueError: 1 must be greater than 0

>>> geo.integer_validator(1, 1)

>>> geo.integer_validator()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> geo.integer_validator("age")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geo.integer_validator("age",(4,))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: age must be an integer

>>> geo.integer_validator("age",[3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: age must be an integer
>>> geo.integer_validator("age",True)

>>> geo.integer_validator("age", False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 15, in integer_validator
    raise ValueError(f"{name} must be greater than 0")
ValueError: age must be greater than 0

>>> geo.integer_validator("age", {3,4})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: age must be an integer

>>> geo.integer_validator("age", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "7-base_geometry.py", line 13, in integer_validator
    raise TypeError(f"{name} must be an integer")
TypeError: age must be an integer
