>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided([[]], 3))
[[]]
>>> print(matrix_divided([], 3))
[]
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
  File "./main.py", line 10, in <module>
    print(matrix_divided([[]], None))
  File "/root/2-trimester/holbertonschool-higher_level_programming/python-test_driven_development/2-matrix_divided.py", line 14, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix = [[1, 2, 3],[4, 5, "Z"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 16, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 8, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, "Z")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 10, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix = [[1, 2, 3, 4],[5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 13, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
