>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3

>>> add_integer(100,-2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "0-add_integer.py", line 7, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "0-add_integer.py", line 5, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(float("NaN"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "0-add_integer.py", line 15, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer

>>> add_integer(8, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
